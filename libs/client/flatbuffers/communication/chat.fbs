// Defines all structures related to chat messaging.

namespace ezMsg.Communication;

// --- E2EE Content (This part is created and encrypted by the client) ---

// This table is serialized to bytes and then encrypted.
// It becomes the content of the `encrypted_content` field in a request.
table ChatMessageContent {
    text:string (required);
    reply_to_message_uid:ulong;
    attachment_uids:[ulong];
}


// --- Client->Server Requests ---

table ChatMessageRequest {
    chat_uid:ulong;
    encrypted_content:[ubyte] (required); // Encrypted "ChatMessageContent" table
}

table MessageReactionRequest {
    message_uid:ulong;
    encrypted_emoji:[ubyte] (required);
}


// --- Server->Client Pushed Messages ---

// Pushed from the server to all chat members when a new message arrives.
table NewChatMessage {
    chat_uid:ulong;
    message_uid:ulong;
    sender_uid:ulong;
    server_timestamp:long;
    encrypted_content:[ubyte] (required); // Encrypted "ChatMessageContent" table
}

enum MessageStatus : ubyte {
    SENT_TO_SERVER,
    DELIVERED_TO_RECIPIENT,
    READ_BY_RECIPIENT
}

// Pushed to the original sender to confirm a message's status.
table MessageStatusUpdate {
    message_uid:ulong;
    status:MessageStatus;
    updated_by_uid:ulong;
    timestamp:long;
}
